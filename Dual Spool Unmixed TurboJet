%Andrew Farmer Dual Spool Unmixed TurboJet HW4
clc
clear all
close all 
format long
% Define all variables
Tref = 518.7;
Pref = 14.696;
M0 = 0.8;
m0 = 600;
T0 = 390;
P0 = 2.73;
piDMax = .99;
Tt4 = 3200;
nB = .99;
piB = .96;
hPR = 18400;
piC  = 36;
piFN = .99;
eF = .89;
piF = 1.7;
alp = 8;
ecL = eF;
piCLR = 3.8;
piCHR = 4;
gamC = 1.4;
cpc = .24;
ecH = .9;
gamT = 1.33;
cpt = .276;
etL = .91;
etH = .89;
Tt4 = 3000;
cpab = .295;
nmH = .9915;
nmL = .997;
piN = .99;
po_p9 = 1;
gc = 32.174;
%START CALCS

Rc = ((gamC-1)/(gamC))*cpc;
Rt = ((gamT-1)/(gamT))*cpt;
a0 = sqrt(gamC*Rc*778.2*gc*T0);
v0 = M0*a0;

% Ram Temp 
Tr = 1 + ((gamC-1)/2)*M0^2;
piR = Tr ^(gamC/(gamC-1));
Tt0 = T0*Tr;
Tt1 = Tt0;
if M0 < 1
    nr = 1;
else
    nr = 1 - .075*(M0-1)^1.35;
end
piD =  nr*piDMax;
Tlam = (cpt*Tt4)/(cpc*T0);
Tt2 = Tt1;
tcLR = piCLR^((gamC-1)/(gamC*ecL));
ncL = (((piCLR^((gamC-1)/(gamC)))-1)/((piCLR)^((gamC-1)/(gamC*ecL))-1));
Tt2_5 = T0*Tr*tcLR;

Tf = piF^((gamC-1)/(gamC*eF));
Tt13 = Tt2*Tf;
nF = (((piF^((gamC-1)/(gamC)))-1)/((piF)^((gamC-1)/(gamC*ecL))-1));
piCHR =  piC/piCLR;
tcHR = piCHR^((gamC-1)/(gamC*ecH));
ncHR = (((piCHR^((gamC-1)/(gamC)))-1)/((piCHR)^((gamC-1)/(gamC*ecH))-1));
Tt3 = T0*Tr*tcLR*tcHR;
f = (cpt*Tt4 - cpc*Tt3)/(nB*hPR-cpt*Tt4);
TtHR = 1 - (((1)/(nmH*(1+f)))*((Tr)/(Tlam))*tcLR*(tcHR-1));
pitHR = TtHR^((gamT)/((gamT-1)*etH)); %Numbers slightly off from example
ntHR = (1 - TtHR) / (1-TtHR^(1/etH));
Tt4_5 = Tt4*TtHR;
TtLR = 1 - ((1)/(nmL*(1+f)))*((Tr)/(TtHR*Tlam))*((tcLR-1)+alp*(Tf-1));
pitLR = TtLR^((gamT)/((gamT-1)*etL));
ntLR = (1 - TtLR) / (1-TtLR^(1/etL));
Tt5 = Tt4_5*TtLR;
Tt6 = Tt5;
Tt7 = Tt6;
Tt8 = Tt7;

p0_p9 = ((((gamT+1)/(2))^((gamT)/(gamT-1)))/(piR*piD*piCLR*piCHR*piB*pitHR*pitLR*piN));
if p0_p9 <=1
    pt9_p9 =(((gamT+1)/(2))^((gamT)/(gamT-1)));
    p0_p9 = ((((gamT+1)/(2))^((gamT)/(gamT-1)))/(piR*piD*piCLR*piCHR*piB*pitHR*pitLR*piN));
    M9 = 1;
else
    pt9_p9 = (piR*piD*piCLR*piCHR*piB*pitHR*pitLR*piN);
    p0_p9 = 1;
    M9 = sqrt( ((2)/(gamT-1))*((pt9_p9)^((gamT-1)/((gamT)))-1)); 
end
Tt9 = Tt8;
T9_T0 = (Tt9/T0)/((pt9_p9)^((gamT-1)/gamT));
V9_a0 = M9*sqrt(((gamT*Rt)/(gamC*Rc))*T9_T0);
V9_v0 = V9_a0*(a0/v0);

p0_p19_crit = (((gamC+1)/2)^((gamC)/(gamC-1)))/(piR*piD*piF*piFN);

if p0_p19_crit <= 1
    pt19_p19 = (((gamC+1)/2)^((gamC)/(gamC-1)));
    p0_p19 =  (((gamC+1)/2)^((gamC)/(gamC-1)))/(piR*piD*piF*piFN);
    M19 = 1;
else
    pt19_p19 = (piR*piD*piF*piFN);
    p0_p19 = 1;
    M19 = sqrt( ((2)/(gamC-1))*((pt19_p19)^((gamC-1)/((gamC)))-1)); 
end

Tt19 = Tt13;
T19_T0 = (Tr*Tf)/((pt19_p19)^((gamC-1)/gamC));
V19_a0 = M19* sqrt(T19_T0);
V19_V0 = V19_a0* (a0/v0);
%Performances
STCR = (((1)/(1+alp))*(a0/gc))*((1+f)*(V9_a0)-M0 +(1+f)*(Rt/Rc)*(T9_T0)/(V9_a0)*((1-p0_p9)/(gamC)));
STBR = ((alp)/(1+alp))*(a0/gc)*((V19_a0)-M0 +(T19_T0)/(V19_a0)*(1-p0_p19)/(gamC));
STR =  STCR + STBR;
TSFC = ((f)/((1+alp)*STR))*3600;
nTH = (a0^2*(((1+f)*V9_a0^2+alp*V19_a0^2-(1+alp)*M0^2)))/(2*gc*f*hPR*778);
nP = ((2*M0*((1+f)*V9_a0-(1+alp)*M0+alp*V19_a0)))/((((1+f)*V9_a0^2+alp*V19_a0^2-(1+alp)*M0^2)));
nO = nTH *nP;
Thrust = m0*STR;

disp(STR)
disp(TSFC)
disp(nTH)
disp(nP)
disp(nO)
disp(Thrust)
%I only displayed the performance metrics since it is not specfied in the
%instructions hopefully that is alright
